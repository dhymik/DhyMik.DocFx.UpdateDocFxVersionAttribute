<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <Version>1.1.0</Version>
    <DevelopmentDependency>true</DevelopmentDependency>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageProjectUrl></PackageProjectUrl>
    <PackageTags>DocFx;MSBuild</PackageTags>
    <PackageProjectUrl>https://github.com/dhymik/DhyMik.DocFx.UpdateDocFxVersionAttributeTask</PackageProjectUrl>
    <PackageReleaseNotes>Release v1.1.0: Added generation of `globalMetadataVariables.css` file with css variables generated from `globalMetadata` attributes in `docfx.json`. This adds an alternative way to include `version` and other custom data in DocFx output.</PackageReleaseNotes>
    <IncludeBuildOutput>false</IncludeBuildOutput>
    <Description>Show up-to-date version information in your DocFx documentation.
This MS build task adds dll version information to a DocFx configuration file and keeps it in sync with the project's version information on every build. In addition, `globalMetadata` attributes are written as css variables to a css file.
In this way, the documentation pages generated by DocFx can contain up-to-date version information without the need for manual updates of the DocFx configuration file.
      A full example with the necessary markup changes to DocFx template files can be found on the project's website.</Description>
    <RepositoryUrl>https://github.com/dhymik/DhyMik.DocFx.UpdateDocFxVersionAttributeTask</RepositoryUrl>
    <RootNamespace>DhyMik.DocFx</RootNamespace>
  </PropertyGroup>

  <ItemGroup>
    <None Remove="example.directory.build.targets" />
  </ItemGroup>
  
  <ItemGroup>
    <PackageReference Include="Microsoft.Build.Utilities.Core" Version="16.10.0" />
    <PackageReference Include="Microsoft.CSharp" Version="4.7.0" />
    <PackageReference Include="Newtonsoft.Json" Version="9.0" />
  </ItemGroup>
  
  <ItemGroup>
    <Content Include="DhyMik.DocFx.UpdateDocFxVersionAttributeTask.targets" Pack="true" PackagePath="\build" />
    <Content Include="$(OutDir)$(TargetName).dll" Pack="true" PackagePath="\tool" />
  </ItemGroup>
  
  <ItemGroup>
    <Folder Include="nuget\" />
  </ItemGroup>
</Project>
